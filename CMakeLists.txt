cmake_minimum_required(VERSION 3.13)
IF(USE_CCACHE OR TRUE)
    IF(UNIX)
        find_program(CCACHE_PROGRAM ccache)
        IF(CCACHE_PROGRAM)
            set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
            message("use ccache: " ${MUST_USE_CCACHE})
            message("ccache at: " ${CCACHE_PROGRAM})
        ELSE()
            IF(MUST_USE_CCACHE)
                message(FATAL_ERROR "ccache not found, exiting")
            ENDIF()
        ENDIF()
    ELSE()
        IF(MUST_USE_CCACHE)
            IF(CCACHE_PROGRAM)
                set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
                message("use ccache: " ${MUST_USE_CCACHE})
                message("ccache at: " ${CCACHE_PROGRAM})
            ELSE()
                message(FATAL_ERROR "ccache not impl'd on windows, exiting")
            ENDIF()
        ENDIF()
    ENDIF()
ENDIF()

project(mulink)

set(CMAKE_CXX_STANDARD 17)

set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-Wall")

IF (BUILD_STATIC)
    message("** Building static binaries")
    set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-static")
    set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
    set(BUILD_SHARED_LIBS OFF)
    set(CMAKE_EXE_LINKER_FLAGS "-static")
    add_executable(mulink main.cpp)
    IF(WIN32)
        target_link_libraries(mulink wsock32 ws2_32)
    ENDIF()
ELSE()
    add_executable(mulink main.cpp)
    IF (WIN32)
        target_link_libraries(mulink wsock32 ws2_32)
    ENDIF()
ENDIF()
